image: docker:1.13-git   ## default docker image if not overwritten by job

## Init vars for all stages
variables:
  BACKEND_BUILD_IMAGE: "maven:3.3.9-jdk-8"
  NEXUS_SETTINGS_FILE: "nexus-settings.xml"
  ## TEMPORARY ONLY SHOULD COME FROM POM !!!
  PROJECT_VERSION: "1.0.0-SNAPSHOT"

## Init This is the order of your pipeline
stages:
  - build
  - dockerize
  - sonar

## Init Reusable tasks use for instance like *docker_login
.docker_login_token: &docker_login_token
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

## replace template variables in nexus-settings.xml.tmp, most importantly use/pw for authentication
.nexus_init_settings: &nexus_init_settings
     
    - if [ ! -f ${NEXUS_SETTINGS_FILE}.tmpl ]; then echo "${NEXUS_SETTINGS_FILE}.tmpl must exist", exit 44; fi
    - echo "Populating SONAR_TOKEN, REGISTRY_USER and pass to nexus settings"
    - sed -e "s/\$NEXUS_USER/$REGISTRY_USER/g" ${NEXUS_SETTINGS_FILE}.tmpl | sed -e "s|\$NEXUS_PASS|$REGISTRY_PASS|g" | sed -e "s/\$SONAR_TOKEN/$SONAR_TOKEN/g"> ${NEXUS_SETTINGS_FILE}


# Stage 1: let's go build the backend ...
build-maven:
  image: $BACKEND_BUILD_IMAGE
  stage: build
  variables:
    MAVEN_OPTS: "-Xms512m -Xmx1024m"
    MAVEN_CLI_OPTS: "-batch-mode --show-version --settings=$NEXUS_SETTINGS_FILE --update-snapshots --errors --fail-fast -Dsurefire.useFile=false "
  before_script: *nexus_init_settings
  script:
    ## for later check -DaltDeploymentRepository=admdel-snapshot::default::https://nexus.signintra.com/content/repositories/admdel-snapshot
    - ALT_DEPLOY_REPO="${CI_PROJECT_NAMESPACE}-release"
    - if echo $PROJECT_VERSION|grep -qi snapshot; then ALT_DEPLOY_REPO="${CI_PROJECT_NAMESPACE}-snapshot"; fi  ## use sims-snapshot repos for snapshot versions
    - ALT_DEPLOY_REPO_OPTS="-DaltDeploymentRepository=${ALT_DEPLOY_REPO}::default::https://nexus.signintra.com/content/repositories/${ALT_DEPLOY_REPO}"
    - echo Thanks 
  artifacts:
      name: "${CI_JOB_STAGE}_${CI_PIPELINE_ID}-artifacts"
      expire_in: 1 hour
      paths:
        - "target/*.war"
        - "logging.properties"
        - "Dockerfile"
  only: ['master']

## Stage 2 Dockerize our artifacts and push to registry
dockerize:
  stage: dockerize
  variables:
    ## don't check out the project again, we get all we need from the coordinator
    GIT_STRATEGY: none
  before_script: *docker_login_token
  script:
    - echo "Building Docker Backend Image for $CI_PROJECT_NAME/$BACKEND_PROJECT tag $PROJECT_VERSION"
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$PROJECT_VERSION .
    - echo "done doker && Sonar"
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$PROJECT_VERSION
    - DOCKER_IMAGE_ID=$(docker images -q $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$PROJECT_VERSION)
    - docker tag $DOCKER_IMAGE_ID $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest
    - docker logout
  only: ['master']
 
 # Stage 3: let's go test the backend ...
sonar-java:
  image: $BACKEND_BUILD_IMAGE
  stage: sonar
  variables:
    MAVEN_OPTS: "-Xms512m -Xmx1024m"
    MAVEN_CLI_OPTS: "-batch-mode --show-version --settings=$NEXUS_SETTINGS_FILE --update-snapshots --errors --fail-fast -Dsurefire.useFile=false "
  before_script: *nexus_init_settings
  script:
    - mvn $MAVEN_CLI_OPTS sonar:sonar
  only: ['master']

